NeuRec enviroment set up https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/
    library requirement plz check /home/syliu/AIR/NeuRec/requirements.txt

    if you don't have conda installed plz install it first 
        run: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
        run: bash ~/miniconda.sh -b -p

    To activate conda command: 
        run: source $HOME/miniconda3/bin/activate
    
    To create a conda enviroment according to the requirement.txt
        run: conda create --name <env_name> --file requirements.txt
    
    To activate a conda enviroment
        run: conda activate <env_name>

    To install package within the enviroment
        run: conda install
    
    To check package used 
        run: conda list
    
    Conda list output for neurec is shown as follow:
        # packages in environment at /home/syliu/miniconda3/envs/neurec_gpu:                                                                             
        #                
        # Name                    Version                   Build  Channel                                                                               
        _libgcc_mutex             0.1                        main                                                                                        
        _tflow_select             2.1.0                       gpu                                                                                        
        absl-py                   0.12.0           py37h06a4308_0                                                                                        
        astor                     0.8.1            py37h06a4308_0                                                                                        
        blas                      1.0                         mkl                                                                                        
        c-ares                    1.17.1               h27cfd23_0                                                                                        
        ca-certificates           2020.12.5            ha878542_0    conda-forge                                                                         
        certifi                   2020.12.5        py37h89c1867_1    conda-forge                                                                         
        coverage                  5.5              py37h27cfd23_2                                                                                        
        cudatoolkit               10.0.130                      0                                                                                        
        cudnn                     7.6.5                cuda10.0_0
        cupti                     10.0.130                      0  
        cython                    0.29.22          py37h2531618_0  
        gast                      0.2.2                    py37_0  
        google-pasta              0.2.0                      py_0  
        grpcio                    1.36.1           py37h2157cd5_1  
        h5py                      2.10.0           py37hd6299e0_1  
        hdf5                      1.10.6               hb1b8bf9_0  
        importlib-metadata        3.10.0           py37h06a4308_0  
        intel-openmp              2020.2                      254  
        keras-applications        1.0.8                      py_1  
        keras-preprocessing       1.1.2              pyhd3eb1b0_0  
        ld_impl_linux-64          2.33.1               h53a641e_7  
        libffi                    3.3                  he6710b0_2  
        libgcc-ng                 9.1.0                hdf63c60_0  
        libgfortran-ng            7.3.0                hdf63c60_0  
        libprotobuf               3.14.0               h8c45485_0  
        libstdcxx-ng              9.1.0                hdf63c60_0  
        markdown                  3.3.4            py37h06a4308_0  
        mkl                       2020.2                      256  
        mkl-service               2.3.0            py37he8ac12f_0  
        mkl_fft                   1.3.0            py37h54f3939_0  
        mkl_random                1.1.1            py37h0573a6f_0  
        ncurses                   6.2                  he6710b0_1  
        numpy                     1.19.2           py37h54aff64_0  
        numpy-base                1.19.2           py37hfa32c7d_0  
        openssl                   1.1.1k               h27cfd23_0  
        opt_einsum                3.1.0                      py_0  
        pandas                    1.2.3            py37ha9443f7_0  
        pip                       21.0.1           py37h06a4308_0  
        protobuf                  3.14.0           py37h2531618_1  
        python                    3.7.10               hdb3f193_0  
        python-dateutil           2.8.1              pyhd3eb1b0_0  
        python_abi                3.7                     1_cp37m    conda-forge
        pytz                      2021.1             pyhd3eb1b0_0  
        readline                  8.1                  h27cfd23_0  
        scipy                     1.3.1            py37h7c811a0_0  
        setuptools                52.0.0           py37h06a4308_0  
        six                       1.15.0           py37h06a4308_0  
        sqlite                    3.35.4               hdfb4753_0  
        tensorboard               1.15.0             pyhb230dea_0  
        tensorflow                1.15.0          gpu_py37h0f0df58_0  
        tensorflow-base           1.15.0          gpu_py37h9dcbed7_0  
        tensorflow-estimator      1.15.1             pyh2649769_0  
        tensorflow-gpu            1.15.0               h0d30ee6_0  
        termcolor                 1.1.0            py37h06a4308_1  
        tk                        8.6.10               hbc83047_0  
        tqdm                      4.60.0             pyhd8ed1ab_0    conda-forge
        typing_extensions         3.7.4.3            pyha847dfd_0  
        webencodings              0.5.1                    py37_1  
        werkzeug                  0.16.1                     py_0  
        wheel                     0.36.2             pyhd3eb1b0_0  
        wrapt                     1.12.1           py37h7b6447c_1  
        xz                        5.2.5                h7b6447c_0  
        zipp                      3.4.1              pyhd3eb1b0_0  
        zlib                      1.2.11               h7b6447c_3


    To install NeuRec 
        run: python setup.py build_ext --inplace
    
    To test if it is successfully installed
        run: python main.py if no error then you good fam

    ## everytime when trying to access this enviroment 
        run: source $HOME/miniconda3/bin/activate -> conda activate <env_name>
        ## source /tmp2/syliu/miniconda3/bin/activate

An example for using Neurec lightgcn on rand_amz_beauty:

    first go to NeuRec/NeuRec_properties/NeuRec_lightGCN.properties
    and change data.input.dataset=rand_amz_beauty

    To change lightgcn hyperparameter: NeuRec/conf/LightGCN.properties

    Then run: 
        python NeuRec/air_baseline_model_train_and_eval/lightGCN_train_and_eval.py


All the dataset for Neurec is under: /home/syliu/AIR/NeuRec/dataset
and in the format of xxx.train and xxx.test
